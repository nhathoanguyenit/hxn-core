<div class="container py-5" style="min-height: 100vh">
    <h1 class="text-center fw-bold mb-3 text-light">Message Digest & Text Tools</h1>
    <p class="text-center text-secondary mb-5">
        Generate secure hashes or convert text between Base64 and Hex formats.
    </p>

    <!-- Tabs -->
    <div
        class="d-flex rounded-top justify-content-center overflow-hidden"
        style="height: 45px; background: color-mix(in srgb, rgb(var(--bs-primary-rgb)), black 25%)"
        id="digestTabs"
        role="tablist"
    >
        <div class="d-flex w-100 justify-content-center">
            <button
                class="nav-link active tab-btn w-100"
                id="hash-tab"
                data-bs-toggle="tab"
                data-bs-target="#hash"
                type="button"
                role="tab"
            >
                ðŸ”’ Hash Generator
            </button>
        </div>
        <div class="d-flex w-100 justify-content-center">
            <button
                class="nav-link tab-btn w-100"
                id="base64-tab"
                data-bs-toggle="tab"
                data-bs-target="#base64"
                type="button"
                role="tab"
            >
                ðŸ”¤ Base64 Converter
            </button>
        </div>
        <div class="d-flex w-100 justify-content-center">
            <button
                class="nav-link tab-btn w-100"
                id="hex-tab"
                data-bs-toggle="tab"
                data-bs-target="#hex"
                type="button"
                role="tab"
            >
                ðŸ’¾ Hex Converter
            </button>
        </div>
    </div>

    <div class="tab-content rounded-bottom bg-primary text-light p-4 shadow-lg">
        <!-- HASH TAB -->
        <div class="tab-pane fade show active" id="hash" role="tabpanel">
            <h4 class="mb-4 fw-semibold text-light">Message Digest (MD5, SHA1, SHA256, SHA512)</h4>

            <div class="mb-3">
                <label for="hashInput" class="form-label text-light small">Input Text</label>
                <textarea
                    id="hashInput"
                    class="form-control custom-input"
                    rows="4"
                    placeholder="Enter text to hash..."
                ></textarea>
            </div>

            <div class="d-flex flex-wrap gap-2 mb-4">
                <button class="btn btn-outline-light btn-sm px-3" onclick="generateHash('MD5')">MD5</button>
                <button class="btn btn-outline-light btn-sm px-3" onclick="generateHash('SHA-1')">SHA1</button>
                <button class="btn btn-outline-light btn-sm px-3" onclick="generateHash('SHA-256')">SHA256</button>
                <button class="btn btn-outline-light btn-sm px-3" onclick="generateHash('SHA-512')">SHA512</button>
            </div>

            <div class="mb-3">
                <label for="hashOutput" class="form-label text-light small">Output Digest (Hex)</label>
                <textarea id="hashOutput" class="form-control custom-input" rows="3" readonly></textarea>
            </div>

            <div class="d-flex gap-2">
                <button class="btn btn-outline-light btn-sm" onclick="copyText('hashOutput')">Copy</button>
                <button class="btn btn-outline-light btn-sm" onclick="clearText('hashInput', 'hashOutput')">
                    Clear
                </button>
            </div>
        </div>

        <!-- BASE64 TAB -->
        <div class="tab-pane fade" id="base64" role="tabpanel">
            <h4 class="mb-4 fw-semibold text-light">Base64 Converter</h4>

            <div class="mb-3">
                <label for="base64Input" class="form-label text-light small">Input Text</label>
                <textarea
                    id="base64Input"
                    class="form-control custom-input"
                    rows="4"
                    placeholder="Enter text or Base64 string..."
                ></textarea>
            </div>

            <div class="d-flex flex-wrap gap-2 mb-4">
                <button class="btn btn-outline-light btn-sm px-3" onclick="encodeBase64()">Encode</button>
                <button class="btn btn-outline-light btn-sm px-3" onclick="decodeBase64()">Decode</button>
            </div>

            <div class="mb-3">
                <label for="base64Output" class="form-label text-light small">Output</label>
                <textarea id="base64Output" class="form-control custom-input" rows="4" readonly></textarea>
            </div>

            <div class="d-flex gap-2">
                <button class="btn btn-light btn-sm" onclick="copyText('base64Output')">Copy</button>
                <button class="btn btn-outline-light btn-sm" onclick="clearText('base64Input', 'base64Output')">
                    Clear
                </button>
            </div>
        </div>

        <!-- HEX TAB -->
        <div class="tab-pane fade" id="hex" role="tabpanel">
            <h4 class="mb-4 fw-semibold text-light">Hex Converter</h4>

            <div class="mb-3">
                <label for="hexInput" class="form-label text-light small">Input Text</label>
                <textarea
                    id="hexInput"
                    class="form-control custom-input"
                    rows="4"
                    placeholder="Enter UTF-8 text or Hex string..."
                ></textarea>
            </div>

            <div class="d-flex flex-wrap gap-2 mb-4">
                <button class="btn btn-outline-light btn-sm px-3" onclick="convertToHex()">To Hex</button>
                <button class="btn btn-outline-light btn-sm px-3" onclick="convertFromHex()">From Hex</button>
            </div>

            <div class="mb-3">
                <label for="hexOutput" class="form-label text-light small">Output</label>
                <textarea id="hexOutput" class="form-control custom-input" rows="4" readonly></textarea>
            </div>

            <div class="d-flex gap-2">
                <button class="btn btn-light btn-sm" onclick="copyText('hexOutput')">Copy</button>
                <button class="btn btn-outline-light btn-sm" onclick="clearText('hexInput', 'hexOutput')">Clear</button>
            </div>
        </div>
    </div>
</div>

<style>

</style>

<script src="/plugins/crypto-js/crypto-js.js"></script>
<script>
    function copyText(id) {
        const el = document.getElementById(id);
        el.select();
        document.execCommand("copy");
        alert("Copied to clipboard!");
    }
    function clearText(...ids) {
        ids.forEach((id) => (document.getElementById(id).value = ""));
    }
    async function generateHash(algo) {
        const input = document.getElementById("hashInput").value.trim();
        let hash;

        switch (algo) {
            case "MD5":
                hash = CryptoJS.MD5(input);
                break;
            case "SHA-1":
                hash = CryptoJS.SHA1(input);
                break;
            case "SHA-256":
                hash = CryptoJS.SHA256(input);
                break;
            case "SHA-384":
                hash = CryptoJS.SHA384(input);
                break;
            case "SHA-512":
                hash = CryptoJS.SHA512(input);
                break;
            default:
                alert("Unsupported algorithm: " + algo);
                return;
        }

        document.getElementById("hashOutput").value = hash.toString(CryptoJS.enc.Hex);
    }
    function encodeBase64() {
        const input = document.getElementById("base64Input").value;
        const encoded = btoa(unescape(encodeURIComponent(input)));
        document.getElementById("base64Output").value = encoded;
    }
    function decodeBase64() {
        try {
            const input = document.getElementById("base64Input").value.trim();
            const decoded = decodeURIComponent(escape(atob(input)));
            document.getElementById("base64Output").value = decoded;
        } catch {
            alert("Invalid Base64 input!");
        }
    }
    function convertToHex() {
        const input = document.getElementById("hexInput").value;
        const encoder = new TextEncoder();
        const data = encoder.encode(input);
        const hex = Array.from(data)
            .map((b) => b.toString(16).padStart(2, "0"))
            .join("");
        document.getElementById("hexOutput").value = hex;
    }
    function convertFromHex() {
        const input = document.getElementById("hexInput").value.replace(/[^0-9a-f]/gi, "");
        if (input.length % 2 !== 0) return alert("Invalid Hex string length");
        const bytes = new Uint8Array(input.length / 2);
        for (let i = 0; i < input.length; i += 2) bytes[i / 2] = parseInt(input.substr(i, 2), 16);
        const decoded = new TextDecoder().decode(bytes);
        document.getElementById("hexOutput").value = decoded;
    }
</script>
